package com.APIMM.mam.model;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * MamSettings generated by hbm2java
 */
@Entity
@Table(name = "MAM_Device_Settings")
public class NoneMamDeviceSettingWeb implements java.io.Serializable {


	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer devSettingId;
	private Integer appID;
	private Integer devID;
	private String settingName;	
	private String settingDescription;
	private String settingValue;
	private String settingType;
	private Date settingUpdated;	
	private NoneMamSetting mamSettings;
	private MdmDevice mdmDevices;

	public NoneMamDeviceSettingWeb() {
	}

	public NoneMamDeviceSettingWeb(Integer devSettingId) {
		this.devSettingId = devSettingId;
	}

	public NoneMamDeviceSettingWeb(Integer devSettingId, Integer appID,String settingName, Integer devID, String settingValue,String settingDescription, 
			String settingType, Date settingUpdated, NoneMamSetting mamSetting, MdmDevice mdmDevices) {
		this.devSettingId = devSettingId;
		this.appID = appID;
		this.devID = devID;
		this.settingName = settingName;
		this.settingValue = settingValue;
		this.settingDescription = settingDescription;
		this.settingType = settingType;
		this.settingUpdated = settingUpdated;		
		this.mamSettings = mamSetting;
		this.setMdmDevices(mdmDevices);
	}
	
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "dev_setting_id", unique = true, nullable = false)
	public Integer getdevSettingId() {
		return this.devSettingId;
	}

	public void setdevSettingId(Integer devSettingId) {
		this.devSettingId = devSettingId;
	}
	@JsonIgnore
	@Column(name = "app_id")
	public Integer getappID() {
		return this.appID;
	}

	public void setappID(Integer appID) {
		this.appID = appID;
	}
	
	@Transient
	//@Column(name = "dev_id")
	public Integer getdevID() {
		//return this.devID;
		try {
			
			return this.mdmDevices.getdevID();
		}
		catch(Exception e) {
		return 0; }
	}

	public void setdevID(Integer devID) {
		this.devID = devID;
	}
	
	@JsonIgnore
	@Transient
	//@Column(name = "setting_name")
	public String getSettingName() { 
		if(this.mamSettings !=null) {
			return this.mamSettings.getSettingName();
		}
		return ""; 
	}
	  
	public void setSettingName(String settingName) { 
		this.settingName = settingName; 
	}
	 

	@Column(name = "setting_value")
	public String getSettingValue() {
		return this.settingValue;
	}
	
	public void setSettingValue(String settingValue) {
		this.settingValue = settingValue;
	}
	
	@Column(name = "setting_description")
	public String getSettingDescription() {
		return this.settingDescription;
	}

	public void setSettingDescription(String settingDescription) {
		this.settingDescription = settingDescription;
	}
	@JsonIgnore
	@Column(name = "setting_type")
	public String getSettingType() {
		return this.settingType;
	}

	public void setSettingType(String setting_Type) {
		this.settingType = setting_Type;
	}
	@JsonIgnore
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "setting_updated", length = 23)
	public Date getSettingUpdated() {
		return this.settingUpdated;
	}
	public void setSettingUpdated(Date settingUpdated) {
		this.settingUpdated = settingUpdated;
	}
		
	@OneToOne(cascade=CascadeType.ALL, fetch=FetchType.EAGER)
	@JoinColumn(name="setting_name", referencedColumnName = "setting_name", nullable = false)
	public NoneMamSetting getMamSettings() {
		return mamSettings;
	}

	public void setMamSettings(NoneMamSetting mamSettings) {
		this.mamSettings = mamSettings;
	}

	@JsonIgnoreProperties({"mamDevModules", "mamDevRouteHistoricals", "mdmDeviceModes"})
	@ManyToOne(cascade=CascadeType.ALL, fetch=FetchType.EAGER)
	@JoinColumn(name="dev_id", referencedColumnName = "dev_id", nullable = false)
	public MdmDevice getMdmDevices() {
		return mdmDevices;
	}

	public void setMdmDevices(MdmDevice mdmDevices) {
		this.mdmDevices = mdmDevices;
	}

}
