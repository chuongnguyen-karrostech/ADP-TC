package com.APIMM.mam.model;
// Generated Nov 13, 2017 11:32:06 AM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * MamDeviceEvent generated by hbm2java
 */
@Entity
@Table(name = "DP_Runs")
public class DPRuns2 implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;	
	private Integer runRoute;
	private String runId;
	private Integer routeId;	
	private String toFrom;
	private Date beginPlannedTime;
	private Date endPlannedTime;
	private Date actualRunStart;
	private Date actualRunEnd;
	private Date runDate;
	private Date lastUpdated;
	private String runDesc;
	
	private DPRoutes routes;
	private List<DPStops2> stops;
	public DPRuns2() {
	}

	public DPRuns2(Integer runRoute, String runId, Integer routeId, String toFrom, Date beginPlannedTime,
			Date endPlannedTime, Date actualRunStart, Date actualRunEnd, Date runDate, Date lastUpdated, String runDesc,
			DPRoutes routes, List<DPStops2> stops) {
		super();
		this.runRoute = runRoute;
		this.runId = runId;
		this.routeId = routeId;
		this.toFrom = toFrom;
		this.beginPlannedTime = beginPlannedTime;
		this.endPlannedTime = endPlannedTime;
		this.actualRunStart = actualRunStart;
		this.actualRunEnd = actualRunEnd;
		this.runDate = runDate;
		this.lastUpdated = lastUpdated;
		//this.runDesc = runDesc;
		this.routes = routes;
		this.stops = stops;
	}


	@OneToMany(fetch = FetchType.LAZY, cascade = { CascadeType.ALL,CascadeType.PERSIST,CascadeType.MERGE }, mappedBy = "runs", orphanRemoval=true)
	@OrderBy("stopTime ASC")
    @Column(nullable = false)
    public List<DPStops2> getstops() { return stops; }
    public void setstops( List<DPStops2> eStops) { this.stops = eStops; }    
    
	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "runRoute", unique = true, nullable = false)
	public Integer getrunRoute() {
		return this.runRoute;
	}

	public void setrunRoute(Integer runRoute) {
		this.runRoute = runRoute;
	}

	@Column(name = "runId")
	public String getrunId() {
		return this.runId;
	}

	public void setrunId(String runId) {
		this.runId = runId;
	}	
	
	   
	@Column(name = "routeId")
	public Integer getrouteId() {
		return this.routeId;
	}

	public void setrouteId(int routeId ) {
		this.routeId = routeId;
	}
	
	@Column(name = "toFrom")
	public String gettoFrom() {
		return this.toFrom;
	}

	public void settoFrom(String toFrom) {
		this.toFrom = toFrom;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss.SSS")		
	@Column(name = "beginPlannedTime", length = 23)
	public Date getbeginPlannedTime() {
		return this.beginPlannedTime;
	}

	public void setbeginPlannedTime(Date beginPlannedTime) {
		this.beginPlannedTime = beginPlannedTime;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss.SSS")		
	@Column(name = "endPlannedTime", length = 23)
	public Date getendPlannedTime() {
		return this.endPlannedTime;
	}

	public void setendPlannedTime(Date endPlannedTime) {
		this.endPlannedTime = endPlannedTime;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss.SSS")		
	@Column(name = "actualRunStart", length = 23)
	public Date getactualRunStart() {
		return this.actualRunStart;
	}

	public void setactualRunStart(Date actualRunStart) {
		this.actualRunStart = actualRunStart;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss.SSS")		
	@Column(name = "actualRunEnd", length = 23)
	public Date getactualRunEnd() {
		return this.actualRunEnd;
	}

	public void setactualRunEnd(Date actualRunEnd) {
		this.actualRunEnd = actualRunEnd;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@JsonFormat(pattern="yyyy-MM-dd")		
	@Column(name = "runDate", length = 23)
	public Date getrunDate() {
		return this.runDate;
	}

	public void setrunDate(Date runDate) {
		this.runDate = runDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@JsonIgnore	
	@Column(name = "lastUpdated", length = 23)
	public Date getLastUpdated() {
		return lastUpdated;
	}

	public void setLastUpdated(Date lastUpdated) {
		this.lastUpdated = lastUpdated;
	}
	@Column(name = "runDesc")
	public String getrunDesc() {
		return this.runDesc;
	}

	public void setrunDesc(String runDesc) {
		this.runDesc = runDesc;
	}
}
